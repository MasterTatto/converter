{"version":3,"sources":["logo.svg","Converter.jsx","App.js","reportWebVitals.js","redux/converter-reducer.js","redux/store.js","redux/selected.js","container/ConverterContainer.js","index.js"],"names":["Converter","props","changeInput","isBuying","className","onChange","culcCurrency","type","value","amountOfBYN","currentCurrency","amountOfCurrency","btn","currencyName","map","n","i","onClick","changeCurrency","changeSellBuy","currencyRate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","currencies","AddCurrencyAC","currency","BuySellAC","CulcCurrencyAC","reducerPac","combineReducers","ConverterReducer","state","action","newCurrency","store","createStore","window","select","ConverterContainer","useState","load","setLoad","useSelector","dispatch","useDispatch","useEffect","axios","get","response","data","console","log","Cur_Abbreviation","Number","Cur_OfficialRate","e","currentTarget","dataset","target","curent","isFinite","toFixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1ab0270.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Converter = (props) => {\r\n    const changeInput = props.isBuying ? (\r\n        <div className={'changeMain'}>\r\n            <div className={'currentChange'}>\r\n                <p>You give the next amount of BYN:</p>\r\n                <input onChange={props.culcCurrency} type=\"text\" data-curent={'byn'} value={props.amountOfBYN}\r\n                />\r\n            </div>\r\n            <div className={'currentChange'}>\r\n                <p>You give the next amount of {props.currentCurrency}:</p>\r\n                <input onChange={props.culcCurrency} type=\"text\" data-curent={'currency'} value={props.amountOfCurrency}\r\n                />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className={'changeMain'}>\r\n\r\n            <div className={'currentChange'}>\r\n                <p>You give the next amount of {props.currentCurrency}:</p>\r\n                <input onChange={props.culcCurrency} type=\"text\" data-curent={'currency'} value={props.amountOfCurrency}\r\n                />\r\n            </div>\r\n            <div className={'currentChange'}>\r\n                <p>You give the next amount of BYN:</p>\r\n                <input onChange={props.culcCurrency} type=\"text\" data-curent={'byn'} value={props.amountOfBYN}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n    const btn = props.currencyName.map((n, i) => {\r\n        return <button onClick={() => props.changeCurrency(n)} key={i}\r\n                       className={props.currentCurrency === n ? 'btnActive' : 'btn'}>{n}</button>\r\n    })\r\n    return (\r\n        <div className={'main'}>\r\n            <h1 className={'h1'}>Currency exchange</h1>\r\n            <div className={'currentCur'}>\r\n                <p>Current currency :</p>\r\n                <div>\r\n                    {btn}\r\n                </div>\r\n            </div>\r\n            <div className={'SellBuy'}>\r\n                <button className={props.isBuying ? 'active' : 'SellBuyBtn'}\r\n                        data-action={'buy'} onClick={props.changeSellBuy}>Buy\r\n                </button>\r\n                <button className={!props.isBuying ? 'active' : 'SellBuyBtn'}\r\n                        data-action={'sell'} onClick={props.changeSellBuy}>Sell\r\n                </button>\r\n            </div>\r\n            <p>Currency rate: {props.currencyRate}</p>\r\n            {changeInput}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Converter;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Converter from \"./Converter\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Converter/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    currencies: [\r\n        // {\r\n        //     currencyName: '',\r\n        //     buyRate: '',\r\n        //     sellRate: 2.58,\r\n        // },\r\n        // {\r\n        //     currencyName: 'EUR',\r\n        //     buyRate: 3.1,\r\n        //     sellRate: 3.06,\r\n        // },\r\n        // {\r\n        //     currencyName: 'RUR',\r\n        //     buyRate: 0.0345,\r\n        //     sellRate: 0.0341,\r\n        // },\r\n    ],\r\n    currentCurrency: 'USD',\r\n    isBuying: true,\r\n    amountOfBYN: '',\r\n    amountOfCurrency: '',\r\n};\r\n\r\nexport const ConverterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BUY_SELL':\r\n            return {\r\n                ...state,\r\n                isBuying: action.isBuying,\r\n                amountOfBYN: '',\r\n                amountOfCurrency: ''\r\n            }\r\n        case 'CHANGE_CURRENCY' :\r\n            return {\r\n                ...state,\r\n                currentCurrency: action.currency,\r\n                amountOfBYN: '',\r\n                amountOfCurrency: ''\r\n            }\r\n        case 'CULI_CURRENCY' :\r\n            return {\r\n                ...state,\r\n                amountOfBYN: action.amountOfBYN,\r\n                amountOfCurrency: action.amountOfCurrency\r\n\r\n            }\r\n        case 'ADD_CURRENCY' :\r\n            let newCurrency = action.currency\r\n            return {\r\n                ...state,\r\n\r\n                currencies: [...state.currencies , newCurrency]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddCurrencyAC = (currency) => {\r\n    return {\r\n         type:'ADD_CURRENCY',currency\r\n\r\n    }\r\n}\r\n\r\nexport const BuySellAC = (isBuying) => {\r\n    return {\r\n        type: 'BUY_SELL', isBuying\r\n    }\r\n}\r\nexport const ChangeCurrencyAC = (currency) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY', currency\r\n    }\r\n}\r\nexport const CulcCurrencyAC = (amountOfBYN, amountOfCurrency) => {\r\n    return {\r\n        type: 'CULI_CURRENCY', amountOfBYN, amountOfCurrency\r\n    }\r\n}\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {ConverterReducer} from \"./converter-reducer\";\r\n\r\nconst reducerPac = combineReducers({\r\n    ConverterReducer: ConverterReducer\r\n})\r\n\r\n\r\nexport const store = createStore(reducerPac)\r\nwindow.store = store","import {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const select = (state) => state.ConverterReducer","import React, {useEffect, useState} from 'react';\r\nimport Converter from \"../Converter\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {select} from \"../redux/selected\";\r\nimport {\r\n    AddCurrencyAC,\r\n    AddCurrencyNameAC,\r\n    AddUSDCurrencyAC,\r\n    BuySellAC,\r\n    ChangeCurrencyAC,\r\n    CulcCurrency,\r\n    CulcCurrencyAC\r\n} from \"../redux/converter-reducer\";\r\nimport axios from \"axios\";\r\nimport {logDOM} from \"@testing-library/react\";\r\n\r\nconst ConverterContainer = () => {\r\n    const [load, setLoad] = useState(false)\r\n    const state = useSelector(select)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        setLoad(true)\r\n        axios.get('https://www.nbrb.by/api/exrates/rates/usd?parammode=2')\r\n            .then(response => {\r\n                    setLoad(false)\r\n                    dispatch(AddCurrencyAC(response.data))\r\n                }\r\n            )\r\n\r\n    }, [])\r\n    //\r\n    useEffect(() => {\r\n        setLoad(true)\r\n        axios.get('https://www.nbrb.by/api/exrates/rates/978?parammode=1')\r\n            .then(response => {\r\n                setLoad(false)\r\n                dispatch(AddCurrencyAC(response.data))\r\n            })\r\n\r\n    }, [])\r\n    //\r\n    useEffect(() => {\r\n        setLoad(true)\r\n        axios.get('https://www.nbrb.by/api/exrates/rates/643?parammode=1')\r\n            .then(response => {\r\n                setLoad(false)\r\n                dispatch(AddCurrencyAC(response.data))\r\n            })\r\n\r\n    }, [])\r\n    //\r\n    //\r\n    let currencyRate = 0;\r\n    const currencyName = state.currencies.map((n) => {\r\n        console.log(n)\r\n        if (state.currentCurrency === n.Cur_Abbreviation) {\r\n            currencyRate = state.isBuying ? +Number(n.Cur_OfficialRate) : +Number(n.Cur_OfficialRate)\r\n        }\r\n        if(state.currentCurrency === 'RUB'){\r\n            currencyRate = state.isBuying ? (+Number(n.Cur_OfficialRate) / +Number(100)) : (+Number(n.Cur_OfficialRate) / +Number(100))\r\n        }\r\n        return n.Cur_Abbreviation\r\n    })\r\n    console.log(state)\r\n\r\n    function changeCurrency(value) {\r\n        dispatch(ChangeCurrencyAC(value))\r\n    }\r\n\r\n\r\n    function changeSellBuy(e) {\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(BuySellAC(true)) : dispatch(BuySellAC(false))\r\n    }\r\n\r\n    function culcCurrency(e) {\r\n        const target = e.currentTarget.dataset.curent\r\n        const value = e.currentTarget.value\r\n        if (!isFinite(+value)) return\r\n        if (target === 'byn') {\r\n            if (value === '') {\r\n                dispatch(CulcCurrencyAC(value, value))\r\n            } else {\r\n                dispatch(CulcCurrencyAC(value, (+Number(value) / currencyRate.toFixed(2)).toFixed(2)))\r\n            }\r\n        } else {\r\n            if (value === '') {\r\n                dispatch(CulcCurrencyAC(value, value))\r\n            } else {\r\n                dispatch(CulcCurrencyAC((+Number(value) * currencyRate.toFixed(2)).toFixed(2), value))\r\n            }\r\n        }\r\n    }\r\n\r\n    return load ? <div>Wait pleas</div> :\r\n        <Converter isBuying={state.isBuying} changeSellBuy={changeSellBuy} currencyRate={currencyRate}\r\n                   currencyName={currencyName} currentCurrency={state.currentCurrency}\r\n                   changeCurrency={changeCurrency} culcCurrency={culcCurrency}\r\n                   amountOfBYN={state.amountOfBYN}\r\n                   amountOfCurrency={state.amountOfCurrency}/>\r\n};\r\n\r\n\r\nexport default ConverterContainer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport ConverterContainer from \"./container/ConverterContainer\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConverterContainer/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}